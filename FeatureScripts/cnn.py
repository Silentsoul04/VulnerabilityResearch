import torch
import torch.nn as nn
import torch.nn.functional as F


class CNN(nn.Module):
    def __init__(self):
        super(CNN, self).__init__()
        # 1 input image channel, 6 output channels, 5x5 square convolution
        # kernel
        self.conv1 = nn.Conv2d(in_channels = 1, out_channels = 6, kernel = 5)
        self.conv2 = nn.Conv2d(in_channels = 6, out_channels = 16, kernel = 5)
        # an affine operation: y = Wx + b
        self.fc1 = nn.Linear(in_features = 16 * 5 * 5, out_features = 120)
        self.fc2 = nn.Linear(in_features = 120, out_features = 84)
        self.out = nn.Linear(in_features = 84, out_features = 1)

    def forward(self, t): # t is a tensor
        #implement forward pass
        return t

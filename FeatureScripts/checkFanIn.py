import os
import re
import fileRetriever 

def countFanIn(files):
    '''Checks for maximum fan in into declared functions'''
    #regex pattern
    #find function declarations
    pattern = re.compile("function\s+.*\s*[(].*[)]")
    
    fileSet = []

    for fileName in files:
        with open(fileName, encoding="utf8") as file:
            #booleans to check if statements are found
            statementFound = False

            #list to store fan in of each function
            fanInList = []

            for i, line in enumerate(file): #[(0, line), (1, line)]
                for match in re.finditer(pattern, line):
                    statementFound = True
                    arguments = ""

                    #isolate parameters in (param1, param2, etc.)
                    m = re.search("[(](.+?)[)]", line)
                    if m:
                        arguments = m.group(1)

                    #split arguments by comma
                    splitArguments = arguments.split(',')
                    argumentCount = len(splitArguments)

                    #add argument number to list
                    fanInList.append(argumentCount)

            if statementFound:
                fileAttr = [fileName, max(fanInList)]
                fileSet.append(fileAttr)
            else:
                fileAttr = [fileName, 0]
                fileSet.append(fileAttr)
        
    print(fileSet)
        
    

if __name__ == "__main__":
    fileSet = fileRetriever.getFileSet()
    countFanIn(fileSet)

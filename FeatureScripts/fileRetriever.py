import os
from file import *

'''gets all files'''

def hasCorrectExtension(file):
    '''checks for php files'''
    if file.endswith(".php") or file.endswith(".inc") or file.endswith(".module") or file.endswith(".jsp"):
        return True
    else:
        return False

def getFileSet(fileTypes):
    '''grabs the file set from vulnerable and nonvulnerable folders'''
    '''int fileTypes: 0 for own file, 1 for juliet files, 2 for hybrid'''
    #get current directory
    #dir_path = os.path.abspath(os.curdir)
    #print(dir_path)
    owd = os.getcwd()

    #go up one directory
    os.chdir("..")
    dir_path = os.path.abspath(os.curdir)
    #print(dir_path)

    #go into FileSet directory
    fileList = []
    if fileTypes == 0:
        dir_path = os.path.join(dir_path, "FileSet")
        print(dir_path)
        fileList = getFiles(dir_path)
    elif fileTypes == 1:
        dir_path = os.path.join(dir_path, "julietFiles")
        print(dir_path)
        fileList = getFiles(dir_path)
    elif fileTypes == 2:
        original_dir_path = dir_path
        dir_path = os.path.join(dir_path, "FileSet")
        print(dir_path)
        fileList1 = getFiles(dir_path)
        dir_path = os.path.join(original_dir_path, "julietFiles")
        print(dir_path)
        fileList2 = getFiles(dir_path)

        fileList = fileList1 + fileList2

    '''#parse through FileSet
    for root, dirs, files in os.walk(dir_path):
        for name in files:
            currentFile = os.path.join(root, name)
            if hasCorrectExtension(currentFile):
                newFile = File(currentFile, name)
                fileList.append(newFile)'''

    #change back to the original working directory
    os.chdir(owd)

    #return list of File objects
    return fileList   

def getFiles(dir_path):
    #parse through FileSet
    fileList = []
    for root, dirs, files in os.walk(dir_path):
        for name in files:
            currentFile = os.path.join(root, name)
            if hasCorrectExtension(currentFile):
                newFile = File(currentFile, name)
                fileList.append(newFile)
    return fileList

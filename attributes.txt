*usesSQL - Files will need to use SQL for a SQL injection to be possible. This feature helps immediately identify files without SQL. To parse for this characteristic, search for the phrase "SQL" or common terms like "SELECT", "FROM", "WHERE" 

*usesStringConcatenation - Many SQL vulnerabilities occur from directly combining user input with a string that represents a SQL command. In PHP, the concatenation symbol is "." or ".=". Since variables are usually concatenated, " '.$ " is a common pattern that shows vulnerability.

*usesClientRequest - Involves data submitted through HTML forms and URLS. Examples include $_GET and $_POST. This is direct user input, which may be an attack.  

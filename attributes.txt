link to a SQL injection cheatsheet: 
https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.md

Attributes/Features
*usesSQL - Files will need to use SQL for a SQL injection to be possible. This feature helps immediately identify files without SQL. To parse for this characteristic, search for the phrase "SQL" or common terms like "SELECT", "FROM", "WHERE" 

*usesStringConcatenation - Many SQL vulnerabilities occur from directly combining user input with a string that represents a SQL command. In PHP, the concatenation symbol is "." or ".=". Since variables are usually concatenated, " '.$ " is a common pattern that shows vulnerability.

*usesClientRequest - Involves data submitted through HTML forms and URLS. Examples include $_GET and $_POST. Although many applications use client requests and are often not vulnerable, when it comes to SQL injections, this is a direct user input, which is often where attacks come from.  

*lacksParameterizedQueries - Vulnerable files generally will NOT have parameterized queries. In PHP, a parameter is represented with a "?". Parameters will usually come after an equals sign, so parse for "= ?". For code that uses mysql, the mysqli_stmt_bind_param function will be used.

*lacksColon - In PHP, parameters in queries can also be achieved by using colons. The other main use for a colon is with a ternary operator, but these are usually uncommon.
Example from http://php.net/manual/en/pdo.prepared-statements.php:
<?php
$stmt = $dbh->prepare ("INSERT INTO user (firstname, surname) VALUES (:f_name, :s_name)");
$stmt -> bindParam(':f_name', 'John');
$stmt -> bindParam(':s_name', 'Smith');
$stmt -> execute();
?>

*lacksPDO - PDO is a class that helps write prepared statements w/ parameterized queries. Look for PDO(). The most important command is under the PDOStatement class; bindParam() binds a value to a parameter

*lacksPrepare - Prepared statements with parameteried queries are crucial for stopping SQL injections. Prepared statements are often called with the "prepare" statement, usually in a form like "$dbh->prepare("examplequery")"
